#include <stdio.h>

struct Carta {
    char estado;
    char codigo[4];
    char nomeCidade[100];
    unsigned long int populacao;
    float area;
    float pib;
    int pontosTuristicos;
    float densidadePopulacional;
    float pibPerCapita;
};

float getValorAtributo(struct Carta c, int atributo) {
    switch (atributo) {
        case 1: return (float)c.populacao;
        case 2: return c.area;
        case 3: return c.pib;
        case 4: return (float)c.pontosTuristicos;
        case 5: return c.densidadePopulacional;
        default: return 0;
    }
}

void exibirNomeAtributo(int atributo) {
    switch (atributo) {
        case 1: printf("População"); break;
        case 2: printf("Área"); break;
        case 3: printf("PIB"); break;
        case 4: printf("Pontos Turísticos"); break;
        case 5: printf("Densidade Populacional"); break;
    }
}

int main() {
    struct Carta carta1 = {'S', "S01", "São Paulo", 12300000, 1521.11, 780.5, 15};
    struct Carta carta2 = {'R', "R02", "Rio de Janeiro", 6700000, 1182.3, 412.3, 12};

    // Cálculos auxiliares
    carta1.densidadePopulacional = carta1.populacao / carta1.area;
    carta1.pibPerCapita = (carta1.pib * 1e9) / carta1.populacao;
    carta2.densidadePopulacional = carta2.populacao / carta2.area;
    carta2.pibPerCapita = (carta2.pib * 1e9) / carta2.populacao;

    int atributo1 = 0, atributo2 = 0;

    // Menu para o primeiro atributo
    printf("=== ESCOLHA O PRIMEIRO ATRIBUTO ===\n");
    printf("1 - População\n2 - Área\n3 - PIB\n4 - Pontos Turísticos\n5 - Densidade Populacional\n");
    printf("Escolha: ");
    scanf("%d", &atributo1);

    if (atributo1 < 1 || atributo1 > 5) {
        printf("Atributo inválido.\n");
        return 1;
    }

    // Menu para o segundo atributo (dinâmico)
    printf("\n=== ESCOLHA O SEGUNDO ATRIBUTO ===\n");
    for (int i = 1; i <= 5; i++) {
        if (i != atributo1) {
            printf("%d - ", i);
            exibirNomeAtributo(i);
            printf("\n");
        }
    }
    printf("Escolha: ");
    scanf("%d", &atributo2);

    if (atributo2 < 1 || atributo2 > 5 || atributo2 == atributo1) {
        printf("Atributo inválido ou repetido.\n");
        return 1;
    }

    // Obtenção dos valores dos atributos
    float valor1_c1 = getValorAtributo(carta1, atributo1);
    float valor1_c2 = getValorAtributo(carta2, atributo1);

    float valor2_c1 = getValorAtributo(carta1, atributo2);
    float valor2_c2 = getValorAtributo(carta2, atributo2);

    // Exibição dos valores
    printf("\n=== COMPARAÇÃO ENTRE %s E %s ===\n", carta1.nomeCidade, carta2.nomeCidade);

    printf("\n-> Atributo 1: ");
    exibirNomeAtributo(atributo1);
    printf("\n%s: %.2f\n", carta1.nomeCidade, valor1_c1);
    printf("%s: %.2f\n", carta2.nomeCidade, valor1_c2);

    printf("\n-> Atributo 2: ");
    exibirNomeAtributo(atributo2);
    printf("\n%s: %.2f\n", carta1.nomeCidade, valor2_c1);
    printf("%s: %.2f\n", carta2.nomeCidade, valor2_c2);

    // Aplicando as regras de comparação
    float soma_c1 = 0, soma_c2 = 0;

    if (atributo1 == 5) {
        soma_c1 += 1 / valor1_c1;
        soma_c2 += 1 / valor1_c2;
    } else {
        soma_c1 += valor1_c1;
        soma_c2 += valor1_c2;
    }

    if (atributo2 == 5) {
        soma_c1 += 1 / valor2_c1;
        soma_c2 += 1 / valor2_c2;
    } else {
        soma_c1 += valor2_c1;
        soma_c2 += valor2_c2;
    }

    // Exibição da soma total
    printf("\n=== RESULTADO FINAL ===\n");
    printf("%s - Soma dos Atributos: %.2f\n", carta1.nomeCidade, soma_c1);
    printf("%s - Soma dos Atributos: %.2f\n", carta2.nomeCidade, soma_c2);

    // Resultado da comparação
    printf("\nResultado: ");
    soma_c1 > soma_c2 ? printf("%s venceu!\n", carta1.nomeCidade) :
    soma_c2 > soma_c1 ? printf("%s venceu!\n", carta2.nomeCidade) :
    printf("Empate!\n");

    return 0;
}
